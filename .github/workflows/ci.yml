name: CI/CD Pipeline

on:
  workflow_dispatch:
    inputs:
      update_ec2:
        description: "Run update EC2 step"
        required: false
        default: "false"
      transfer_file:
        description: "Run transfer file step"
        required: false
        default: "false"
      build:
        description: "Run build step"
        required: false
        default: "true"
      deploy:
        description: "Run deploy step"
        required: false
        default: "true"
      cleanup:
        description: "Run cleanup step"
        required: false
        default: "true"

jobs:
  transfer_file:
    if: ${{ github.event.inputs.transfer_file == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Transfer docker-compose.yml
        run: scp -o StrictHostKeyChecking=no ./server/docker-compose.yml ec2-user@${{ secrets.API_SERVER }}:/home/ec2-user/server-configuration/docker-compose.yml
      - name: Transfer nginx.conf
        run: scp -o StrictHostKeyChecking=no ./server/nginx.conf ec2-user@${{ secrets.API_SERVER }}:/home/ec2-user/server-configuration/nginx/nginx.conf
      - name: Transfer update_ec2.sh
        run: scp -o StrictHostKeyChecking=no ./server/update_ec2.sh ec2-user@${{ secrets.API_SERVER }}:/home/ec2-user/server-configuration/update_ec2.sh
      - name: Transfer ssl.sh
        run: scp -o StrictHostKeyChecking=no ./server/ssl.sh ec2-user@${{ secrets.API_SERVER }}:/home/ec2-user/server-configuration/ssl.sh

  update-ec2:
    if: ${{ github.event.inputs.update_ec2 == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Update EC2
        run: ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.API_SERVER }} 'bash /home/ec2-user/server-configuration/update_ec2.sh'


  build:
    if: ${{ github.event.inputs.build == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_HUB_USER }} --password-stdin

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USER }}/${{ secrets.DOCKER_HUB_REPO }}:${{ secrets.CI_COMMIT_REF_NAME }} .
          docker push ${{ secrets.DOCKER_HUB_USER }}/${{ secrets.DOCKER_HUB_REPO }}:${{ secrets.CI_COMMIT_REF_NAME }}

  deploy:
    if: ${{ github.event.inputs.deploy == 'true' }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.API_SERVER }} << 'EOF'
            cd /home/ec2-user/server-configuration
            docker-compose down
            docker-compose pull
            docker-compose up -d
          EOF

  cleanup:
    if: ${{ github.event.inputs.cleanup == 'true' }}
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Cleanup Docker
        run: ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.API_SERVER }} "docker system prune -a -f"
